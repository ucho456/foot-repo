// firestore rules sample
// https://github.com/sgr-ksmt/firebase-ec-demo

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // common functions
    function onlyMe(userId) {
      return request.auth != null && userId == request.auth.uid;
    }

    function userRef(uid) {
      return /databases/$(database)/documents/users/$(uid)
    }

    function isValidString(v, min, max) {
      return min <= v.size() && v.size() <= max;
    }

    function isValidInt(v, min, max) {
      return min <= v && v <= max;
    }

    function isValidImage(v) {
      return v == null || v.matches('^https?://.+$');
    }

    function isValidSelectTeam (v) {
      return v == 'home' || v == 'away' || v == 'both'
    }

    function isValidPosition (v) {
      return v == 'GK' || v == 'DF' || v == 'MF' || v == 'FW' || v == 'HC' || v == null
    }

    function isValidPoint (v) {
      return v == '0.0' || v == '0.5' || v == '1.0' || v == '1.5' || v == '2.0' || v == '2.5' || v == '3.0' || v == '3.5' || v == '4.0' || v == '4.5' || v == '5.0' || v == '6.0' || v == '6.5' || v == '7.0' || v == '7.5' || v == '8.0' || v == '8.5' || v == '9.0' || v == '9.5' || v == '10.0'
    }

    // competitions
    match /competitions/{competitionId} {
      allow read;
      match /scorers/{scorerId} {
        allow read;
      }
      match /standings/{standingId} {
        allow read;
      }
    }

    // matches
    match /matches/{matchId} {
      allow read;
      match /for-report/{matchId} {
        allow read;
      }
    }

    // reports
    function isValidReport(report) {
      return report.size() == 12
      && 'title' in report && report.title is string
      && 'user' in report && report.user is map
      && 'homeTeam' in report && report.homeTeam is map
      && 'awayTeam' in report && report.awayTeam is map
      && 'competition' in report && report.competition is map
      && 'jstDate' in report && report.jstDate is string
      && 'match' in report && report.match is map
      && 'selectTeam' in report && report.selectTeam is string
      && 'momId' in report && report.momId is string
      && 'summary' in report && report.summary is string
      && 'teamIds' in report && report.teamIds is list
      && 'createdAt' in report && report.createdAt is timestamp
      && isValidString(report.title, 0, 32)
      && (report.user.ref == userRef(request.auth.uid) || report.user.ref == userRef('guest'))
      && isValidString(report.user.name, 1, 20)
      && isValidImage(report.user.imageUrl)
      && isValidString(report.homeTeam.id, 1, 20)
      && exists(report.homeTeam.ref)
      && isValidString(report.homeTeam.name, 1, 100)
      && isValidString(report.homeTeam.shortName, 1, 3)
      && isValidImage(report.homeTeam.imageUrl)
      && isValidInt(report.homeTeam.score, 0, 100)
      && isValidString(report.awayTeam.id, 1, 20)
      && exists(report.awayTeam.ref)
      && isValidString(report.awayTeam.name, 1, 100)
      && isValidString(report.awayTeam.shortName, 1, 3)
      && isValidImage(report.awayTeam.imageUrl)
      && isValidInt(report.awayTeam.score, 0, 100)
      && isValidString(report.competition.id, 1, 20)
      && exists(report.competition.ref)
      && isValidString(report.competition.name, 1, 20)
      && isValidString(report.jstDate, 10, 10)
      && isValidString(report.match.id, 1, 20)
      && exists(report.match.ref)
      && isValidSelectTeam(report.selectTeam)
      && isValidString(report.momId, 0, 10)
      && isValidString(report.summary, 0, 300);
    }

    function isValidReportItem(reportItem) {
      return reportItem.size() == 6
      && 'player' in reportItem && reportItem.player is map
      && 'position' in reportItem && (reportItem.position is string || reportItem.position == null)
      && 'shirtNumber' in reportItem && (reportItem.shirtNumber is int || reportItem.shirtNumber == null)
      && 'point' in reportItem && reportItem.point is string
      && 'text' in reportItem && reportItem.text is string
      && 'order' in reportItem && reportItem.order is int
      && isValidString(reportItem.player.id, 1, 10)
      && isValidString(reportItem.player.name, 1, 100)
      && isValidPosition(reportItem.position)
      && (isValidInt(reportItem.shirtNumber, 1, 99) || reportItem.shirtNumber == null)
      && isValidPoint(reportItem.point)
      && isValidString(reportItem.text, 0, 140)
      && isValidInt(reportItem.order, 1, 30);
    }

    match /reports/{reportId} {
      allow read;
      allow create: if isValidReport(request.resource.data);
      match /home-team-report-items/{homeTeamReportItemId} {
        allow read;
        allow create: if isValidReportItem(request.resource.data)
      }
      match /away-team-report-items/{awayTeamReportItemId} {
        allow read;
        allow create: if isValidReportItem(request.resource.data)
      }
    }

    match /teams/{teamId} {
      allow read;
    }

    // users
    function isValidUser(user) {
      return user.size() == 5
      && 'name' in user && user.name is string
      && 'imageUrl' in user && (user.imageUrl == null || user.imageUrl is string)
      && 'greet' in user && user.greet is string
      && 'competitionId' in user && user.competitionId is string
      && 'teamId' in user && user.teamId is string
      && isValidString(user.name, 1, 20)
      && isValidImage(user.imageUrl)
      && isValidString(user.greet, 0, 140)
      && isValidString(user.competitionId, 1, 20)
      && isValidString(user.teamId, 1, 20);
    }

    match /users/{userId} {
      allow read;
      allow create: if onlyMe(userId)
      && request.auth.token.initSetting == false
      && isValidUser(request.resource.data);
    }
  }
}