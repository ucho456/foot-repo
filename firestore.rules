rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    function onlyMe(userId) {
      return isAuth() && userId == request.auth.uid;
    }

    function isValidUser(user) {
      return user.size() == 2
      && 'name' in user && user.name is string
      && 'photoUrl' in user && (user.photoUrl is string || user.photoUrl == null);
    }

    match /users/{userId} {
      allow read;
      allow create: if onlyMe(userId)
      && isValidUser(request.resource.data)
      && (0 < request.resource.data.name.size() && request.resource.data.name.size() <= 20)
      && (0 < request.resource.data.photoUrl.size() && request.resource.data.photoUrl.size() <= 100);
    }
  }
}